"""set code int enum

Revision ID: 03d102f92ae1
Revises: b1dd36581396
Create Date: 2024-12-20 15:20:21.653541

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic_postgresql_enum import TableReference
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '03d102f92ae1'
down_revision: Union[str, None] = 'b1dd36581396'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_activity_logs_id', table_name='activity_logs')
    op.drop_table('activity_logs')
    # sa.Enum('active', 'deactive', name='user_status').drop(op.get_bind())
    # sa.Enum('active', 'deactive', name='userstatus').drop(op.get_bind())
    op.sync_enum_values(
        enum_schema='public',
        enum_name='workstreamenum',
        new_values=['RLHF_VISION', 'IMAGE_EVAL', 'SFT_REASONING', 'RLHF_TEXT', 'SFT_CODE_INT'],
        affected_columns=[TableReference(table_schema='public', table_name='batches', column_name='workstream')],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema='public',
        enum_name='workstreamenum',
        new_values=['RLHF_VISION', 'IMAGE_EVAL', 'SFT_REASONING', 'RLHF_TEXT'],
        affected_columns=[TableReference(table_schema='public', table_name='batches', column_name='workstream')],
        enum_values_to_rename=[],
    )
    sa.Enum('active', 'deactive', name='userstatus').create(op.get_bind())
    sa.Enum('active', 'deactive', name='user_status').create(op.get_bind())
    op.create_table('activity_logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('action', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('resource', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('resource_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='activity_logs_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='activity_logs_pkey')
    )
    op.create_index('ix_activity_logs_id', 'activity_logs', ['id'], unique=False)
    # ### end Alembic commands ###
