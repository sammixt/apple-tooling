"""delivery_id to string

Revision ID: bf3a4b3d6f7a
Revises: 87f0a00ca0c2
Create Date: 2025-01-03 14:55:55.276211

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bf3a4b3d6f7a'
down_revision: Union[str, None] = '87f0a00ca0c2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('seeders')
    op.alter_column('roles', 'permissions',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=None,
               existing_nullable=True)
    op.alter_column('roles', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               type_=sa.DateTime(),
               nullable=True)
    op.alter_column('roles', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               type_=sa.DateTime(),
               nullable=True)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('users', 'role_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('validation_errors', 'delivery_id',
               existing_type=sa.UUID(),
               type_=sa.String(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('validation_errors', 'delivery_id',
               existing_type=sa.String(),
               type_=sa.UUID(),
               existing_nullable=True)
    op.alter_column('users', 'role_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=False)
    op.alter_column('roles', 'updated_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('now()'),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('roles', 'created_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('now()'),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('roles', 'permissions',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=sa.text("'{}'::jsonb"),
               existing_nullable=True)
    op.create_table('seeders',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('run_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='seeders_pkey'),
    sa.UniqueConstraint('name', name='seeders_name_key')
    )
    # ### end Alembic commands ###
