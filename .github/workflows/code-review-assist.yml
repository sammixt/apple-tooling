name: Tooling Review Assist

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  review:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Step 3: Install Python dependencies
      - name: Install dependencies for Python
        run: |
          cd backend_fastapi
          pip install -r requirements.txt
          pip install flake8 black  # Install linting/formatting tools

      # Step 4: Run Python linters
    #   - name: Run flake8 for Python linting
    #     run: |
    #       flake8 . --exclude=backend_fastapi/migrations/*

      - name: Run black for Python formatting
        run: |
          black --check . --exclude '(backend_fastapi/migrations/|backend_fastapi/app/service/delivery_validation/onetime-insertion-s3-data.py)'

    #   # Step 5: Install React dependencies
    #   - name: Install dependencies for React
    #     run: |
    #       cd frontend && npm install

    #   # Step 6: Run React linters
    #   - name: Run eslint for React linting
    #     run: |
    #       cd frontend && npx eslint . --ext .js,.jsx,.ts,.tsx  # Run eslint on the frontend folder

    #   - name: Run prettier for React formatting
    #     run: |
    #       cd frontend && npx prettier --check .  # Run prettier in check mode to verify formatting
    #   - name: Run Code Review Assist
    #     uses: github/code-review-assist-experimental@v1
    #     with:
    #       repo-token: ${{ secrets.GITHUB_TOKEN }}
    #       review-comment: true  # Ensure the app adds comments to the PR
